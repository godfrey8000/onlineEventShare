// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  VIEWER
  CHATTER
  EDITOR
  ADMIN
}

model User {
  id        Int           @id @default(autoincrement())
  username  String        @unique
  password  String
  nickname  String?
  role      Role          @default(VIEWER)
  createdAt DateTime      @default(now())
  trackers  Tracker[]
  messages  ChatMessage[]
}

model ChatMessage {
  id        Int        @id @default(autoincrement())
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  content   String
  createdAt DateTime   @default(now())
}

model Episode {
  id        Int         @id @default(autoincrement())
  name      String
  maps      Map[]
  trackers  Tracker[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Map {
  id        Int         @id @default(autoincrement())
  name      String
  level     Int
  favourite Boolean     @default(false)
  episodeId Int
  episode   Episode     @relation(fields: [episodeId], references: [id])
  trackers  Tracker[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Tracker {
  id         Int        @id @default(autoincrement())
  episodeId  Int
  mapId      Int
  userId     Int?
  channelId  Int
  level      Int?
  status     String
  nickname   String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  map       Map         @relation(fields: [mapId], references: [id])
  episode   Episode     @relation(fields: [episodeId], references: [id])
  user      User?       @relation(fields: [userId], references: [id])
}

model Channel {
  id   Int    @id @default(autoincrement())
  name String
}
